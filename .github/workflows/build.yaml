
name: Build and Push Docker Image to Docker Hub

on:
 push:
    branches:
    - enny
 pull_request:
    branches:
    - enny
 workflow_dispatch:

env:
 IMAGE_NAME: ${{ https://github.com/enitos11/easy-school/tree/enny }}
permissions:
  contents: read
  packages: write

jobs:
 build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: setup python3
      uses: actions/setup-python@v4
      with:
        python-version: 3.10

    - name: Install dependencies
      run: |
        pip install -r requirements.txt
    - name: Make migrations and migrate
      run: |
        python manage.py makemigrations
        python manage.py migrate
        python manage.py create superuser

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v4
    - name: Log in to Docker Hub
      uses: docker/login-action@v4
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_TOKEN }} # Use a personal access token instead of a password
    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ${{ env.IMAGE_NAME }}
    - name: Build and push Docker image 
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels}}
  #       name: Deploy to Amazon ECS
  #       on:
  #       push:
  #          branches:
  #           - enny
  # pull_request:
  #   branches:
  #   - enny   
    env:
      AWS_REGION: us-east-1                # set this to your preferred AWS region, e.g. us-west-1
      ECR_REPOSITORY: enny/enitos-enny           # set this to your Amazon ECR repository name
      # ECS_SERVICE: MY_ECS_SERVICE                 # set this to your Amazon ECS service name
      # ECS_CLUSTER: MY_ECS_CLUSTER                 # set this to your Amazon ECS cluster name
      # ECS_TASK_DEFINITION: MY_ECS_TASK_DEFINITION # set this to the path to your Amazon ECS task definition
                                                  # file, e.g. .aws/task-definition.json
      CONTAINER_NAME: enny/enitos-enny           # set this to the name of the container in the
                                                  # containerDefinitions section of your task definition
 deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}